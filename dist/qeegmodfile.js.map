{"version":3,"file":null,"sources":["../src/QeegModFileParser.js","../src/QeegModFileInterpreter.js"],"sourcesContent":["/*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/es6module\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\n/**\n* An instance of QeegModFileParser can be used to parse several file\n* (you don't need to create a QeegModFileParser instance per file to parse).\n* The Qeeg MOD file usually have the .MOD extension, though this parser does not\n* need the filename or the extension.\n*\n*/\nclass QeegModFileParser {\n  constructor(){\n    this._rawData = null;\n  }\n  \n  /**\n  * Feed the parser with raw data to be parsed\n  * @param {ArrayBuffer} data - the raw data\n  */\n  setRawData( data ){\n    this._rawData = data;\n  }\n  \n  \n  /**\n  * Launch the parsing of the ArrayBuffer that was given with the method setRawData\n  * @return {Object} - the MOD file data in a readable format\n  */\n  parse(){\n    var qeegData = null;\n    try{\n      qeegData = this._parseNoException();\n    }catch(e){\n      //console.error( e );\n      console.warn(\"This file is not compatible.\");\n    }\n    \n    return qeegData;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * This method parses the data without caring of potential exception to be raised,\n  * it does not handle them. Thus, this method is unsafe to use as is and should\n  * no be used directly.\n  * @return {Object} - the MOD file data in a readable format\n  */\n  _parseNoException(){\n    if( !this._rawData ){\n      console.warn(\"The input buffer is null. Nothing to be parsed here.\");\n      return null;\n    }\n    \n    var inputBuffer = this._rawData\n    \n    var view = new DataView( inputBuffer );\n    var littleEndian = true;\n    \n    // ------------- DECODING HEADER -------------------\n    \n    var header = {};\n    \n    // Protection Mask\n    // Offset: 0, length: 2\n    header.protectionMask = view.getUint16(0, littleEndian);\n    \n    // Comment (first byte is the real length)\n    // Offset: 2, length: 81\n    var commentRealLength = view.getUint8(2);\n    var commentBytes = new Uint8Array(inputBuffer, 3, commentRealLength);\n    header.comment = String.fromCharCode.apply(String, commentBytes);\n    \n    // Measure (M) Size\n    // Offset: 83, length: 2\n    header.measureSize = view.getUint16(83, littleEndian);\n    \n    // Duration (D) Size\n    // Offset: 85, length: 2\n    header.durationSize = view.getUint16(85, littleEndian);\n    \n    // First space (F) Size\n    // Offset: 87, length: 2\n    header.firstSpaceSize = view.getUint16(87, littleEndian);\n    \n    // Second space (S) Size\n    // Offset: 89, length: 2\n    header.secondSpaceSize = view.getUint16(89, littleEndian);\n    \n    // Reserved bytes\n    // Offset: 91, length: 2\n    header.reservedBytes = view.getUint16(91, littleEndian);\n    \n    // Data size\n    // Offset: 93, length: 2\n    header.dataSize = view.getUint16(93, littleEndian);\n    \n    // ------------- DECODING MATRIX -------------------\n    var matrixOffset = 95;\n    \n    var matrixSizeElements =  header.measureSize * \n                              header.durationSize * \n                              header.firstSpaceSize * \n                              header.secondSpaceSize;\n                              \n    var matrixSizeBytes = matrixSizeElements * header.dataSize;\n                          \n    var matrixData = new Float32Array(matrixSizeElements);\n    \n    for(var i=0; i<matrixSizeElements; i++){\n      matrixData[i] = view.getFloat32(matrixOffset + i * header.dataSize, littleEndian) \n    }\n    \n    // ------------- DECODING RESERVED BYTE SECTION -------------------\n    var reservedBytesSectionOffset = matrixOffset + matrixSizeBytes ;\n    // we dont care about this section - we wont use it\n    \n    // ------------- DECODING INFO SECTION -------------------\n    // This info section is lways corrupted - we wont use it\n    var infoSectionOffset = reservedBytesSectionOffset + header.reservedBytes;\n    var infoRealLength = view.getUint8(infoSectionOffset);\n    var infoBytes = new Uint8Array(inputBuffer, infoSectionOffset+1, infoRealLength);\n    var info = String.fromCharCode.apply(String, infoBytes);\n    \n    // ------------- DECODING HEADER OF LIST SECTION -------------------\n    var headerOfListOffset = infoSectionOffset + 9;\n    \n    var listSize = 8;\n    var offsetByteSize = 4;\n    var totalByteSize = 2;\n    var headerOfList = new Array(listSize);\n    \n    for(var i=0; i<listSize; i++){\n      var record = {\n        // !! IMPORTANT !! there is a known BUG in the offset value\n        //offset: view.getInt16(headerOfListOffset + i * (offsetByteSize+totalByteSize), littleEndian),\n        total: view.getUint16(headerOfListOffset + i * (offsetByteSize+totalByteSize) + offsetByteSize, littleEndian),\n        labels: null\n      }\n      headerOfList[i] = record;\n    }\n    \n    headerOfList[0].description = \"list of labels for measure dimension\";\n    headerOfList[1].description = \"list of labels for duration dimension\";\n    headerOfList[2].description = \"list of labels for first space dimension\";\n    headerOfList[3].description = \"list of labels for second space dimension\";\n    headerOfList[4].description = \"list of scales\";\n    headerOfList[5].description = \"list of units\";\n    headerOfList[6].description = \"list of transformations\";\n    headerOfList[7].description = \"list of contexts\";\n    \n    var infoSection2Offset = headerOfListOffset + 48;\n    var localOffset = infoSection2Offset\n\n    // list 1 to 6 (0 to 5 on out 0-indexed array)\n    for(var i=0; i<headerOfList.length - 2; i++){\n      var nbOfElem = headerOfList[i].total;\n      \n      headerOfList[i].labels = nbOfElem ? new Array( nbOfElem ).fill(\"\") : 0;\n      \n      for(var j=0; j<nbOfElem; j++){\n        var strByteLength = view.getUint8(localOffset)\n        \n        if( strByteLength ){\n          var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n          //var str = String.fromCharCode.apply(String, strBytes);\n          var str = String.fromCharCode(...strBytes);\n          // some ASCII charcode are wrong, hopefully always in the same way\n          headerOfList[i].labels[j] = str.replace(\"æ\", \"µ\").replace(\"ý\", \"²\"); \n        }\n        \n        localOffset += strByteLength + 1;\n      }\n      \n    }\n\n    // particular case for list 7 (6 on our 0-indexed array) -- the transformations\n    // the total value is not the length but the actual value to consider\n    var transformation = view.getUint8(localOffset);\n    headerOfList[6].labels = transformation;\n    localOffset += headerOfList[6].total*(transformation + 1);\n    \n    // ------------- DECODING THE LIST OF CONTEXT -------------------\n    \n    // parsing the list of contexts\n    var listOfContexts = headerOfList[ headerOfList.length - 1];\n    listOfContexts.contextsByteLength = new Array( listOfContexts.total );\n    listOfContexts.types = new Array( listOfContexts.total );\n    listOfContexts.values = new Array( listOfContexts.total );\n    \n    const regexTypeDetection = /[a-zA-Z ]*\\:{1}([a-zA-Z]*)[\\[]?\\d*[\\]]?/;\n    \n    listOfContexts.labels = new Array( listOfContexts.total ).fill(\"\");\n    \n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var strByteLength = view.getUint8(localOffset)\n      var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n      var str = String.fromCharCode.apply(String, strBytes);\n      listOfContexts.labels[iCtx] = str.split(\":\")[0];\n      listOfContexts.contextsByteLength[iCtx] = view.getUint16(localOffset + strByteLength + 1, littleEndian);\n      \n      var typeMatch = regexTypeDetection.exec( str );\n      if(typeMatch){\n        listOfContexts.types[iCtx] = typeMatch[1].toLowerCase();\n      }else{\n        listOfContexts.types[iCtx] = null;\n      }\n      \n      localOffset += strByteLength + 3;\n    }\n    \n    // getting the values for the contexts\n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var value = null;\n      if( listOfContexts.types[iCtx] === \"single\" ){\n        // single precision floats are on 4 bytes\n        value = view.getFloat32(localOffset, littleEndian);\n        \n      }else if(listOfContexts.types[iCtx] === \"boolean\"){\n        value = new Array(listOfContexts.contextsByteLength[iCtx]);\n        for(var b=0; b<value.length; b++){\n          value[b] = !!view.getUint8(localOffset + b)\n        }\n        \n      }else if(listOfContexts.types[iCtx] === \"string\"){\n        var strByteLength = view.getUint8(localOffset)\n        var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n        value = String.fromCharCode.apply(String, strBytes);\n      }\n      \n      localOffset += listOfContexts.contextsByteLength[iCtx];\n      listOfContexts.values[ iCtx ] = value;\n    }\n    \n    // ------------- CLEANING HEADER OF LIST -------------------\n    \n    for(var i=0; i<headerOfList.length; i++){\n      delete headerOfList[i].total;\n    }\n    \n    delete headerOfList[7].contextsByteLength;\n    delete headerOfList[7].types;\n    \n    var modEeg = {\n      metadata: {\n        comment: header.comment,\n        sizes: {\n          measure: header.measureSize,\n          duration: header.durationSize,\n          firstSpace: header.firstSpaceSize,\n          secondSpace: header.secondSpaceSize,\n        },\n        informationList: headerOfList\n      },\n      \n      data: matrixData\n    }\n    \n    return modEeg;\n  }\n  \n  \n} /* END of QeegModFileParser */\n\nexport { QeegModFileParser }; \n","\nclass QeegModFileInterpreter {\n  \n  constructor( qeegModObj = null ){\n    this._qeegModObj = null;\n    this._typeCode = null;\n    \n    this._typeCodeMap = {\n      \"Z Electrical Tomography for Cortex and Basal Ganglia\": \"ZETCBG\",\n      \"Z Electrical Tomography for Cortex\": \"ZETC\",\n      \"Z Cross Spectrum\": \"ZCROSS\",\n      \"Z Broad Band\": \"ZBBSP\",\n      \"Phase\": \"PHA\",\n      \"Electrical Tomography for Cortex and Basal Ganglia\": \"ETCBG\",\n      \"Electrical Tomography for Cortex\": \"ETC\",\n      \"Cross Spectrum\": \"CROSS\",\n      \"Correlation\": \"COR\",\n      \"Coherence\": \"COH\",\n      \"Broad Band\": \"BBSP\",\n      // \"Raw Electrical Tomography Individual\": \"ET\" // no file of this type to check if it's the correct string\n    }\n    \n    \n    this.setQeegModObj( qeegModObj );\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * find the typecode by correspondance with the `comment` metadata\n  */\n  _defineTypeCode(){\n    var type = this.getType();\n    \n    if( type in this._typeCodeMap ){\n      this._typeCode = this._typeCodeMap[ type ];\n    }\n  }\n  \n  \n  /**\n  * In case the qeeg MOD object from the parser is not set in the constructor, it can be set here.\n  * @param {Object} qeegModObj - output of a QeegModFileParser instance\n  */\n  setQeegModObj( qeegModObj = null ){\n    if( !qeegModObj )\n      return;\n      \n    this._qeegModObj = qeegModObj;\n    this._defineTypeCode();\n  }\n  \n  \n  /**\n  * Get the qeeg type from the object comment\n  * @return {String} the type\n  */\n  getType(){\n    return this._qeegModObj.metadata.comment;\n  }\n  \n  \n  /**\n  * Get the type code of the data. Can be 'CROSS', 'ZCROSS', 'BBSP', 'ZBBSP',\n  * 'ETC', 'ZETC', 'ETCBG', 'ZETCBG', 'ET', 'COR', 'COH', 'PHA'\n  * @return {string} the type code or null if it was impossible to determine\n  */\n  getTypeCode(){\n    return this._typeCode;\n  }\n  \n  \n  /**\n  * Get all the measure labels\n  * @return {Array} array of strings\n  */\n  getMeasureLabels(){\n    return this._qeegModObj.metadata.informationList[0].labels;\n  }\n  \n  \n  /**\n  * Get all the duration labels\n  * @return {Array} array of strings\n  */\n  getDurationsLabels(){\n    return this._qeegModObj.metadata.informationList[1].labels;\n  }\n  \n  \n  /**\n  * Get all the first-space labels\n  * @return {Array} array of strings\n  */\n  getFirstSpacelabels(){\n    return this._qeegModObj.metadata.informationList[2].labels;\n  }\n  \n  \n  /**\n  * Get all the second-space labels\n  * @return {Array} array of strings\n  */\n  getSecondSpacelabels(){\n    return this._qeegModObj.metadata.informationList[3].labels;\n  }\n  \n  \n  /**\n  * Get all the unit labels\n  * @return {Array} array of strings\n  */\n  getUnitsLabels(){\n    return this._qeegModObj.metadata.informationList[5].labels;\n  }\n  \n  \n  /**\n  * Get the size of the measure dimension\n  * @return {Number} the size\n  */\n  getMeasureSize(){\n    return this._qeegModObj.metadata.sizes.measure;\n  }\n  \n  \n  /**\n  * Get the size of the duration dimension\n  * Note: the name \"duration\" is missleading, take it as a sort of measure,\n  *       aka. just another dimension\n  * @return {Number} the size\n  */\n  getDurationSize(){\n    return this._qeegModObj.metadata.sizes.duration;\n  }\n  \n  \n  /**\n  * Get the size of the first-space dimension\n  * @return {Number} the size\n  */\n  getFirstSpaceSize(){\n    return this._qeegModObj.metadata.sizes.firstSpace;\n  }\n  \n  \n  /**\n  * Get the size of the second-space dimension\n  * @return {Number} the size\n  */\n  getSecondSpaceSize(){\n    return this._qeegModObj.metadata.sizes.secondSpace;\n  }\n  \n  \n  /**\n  * Get the size of the dimensions, in the order of varying speed\n  * (the last varies faster)\n  * @return {Array} the dimensions\n  */\n  getDimensionSizes(){\n    return [\n      this._qeegModObj.metadata.sizes.measure,\n      this._qeegModObj.metadata.sizes.duration,\n      this._qeegModObj.metadata.sizes.firstSpace,\n      this._qeegModObj.metadata.sizes.secondSpace\n    ]\n  }\n  \n  \n  /**\n  * Get the number of dimensions actually used in this dataset.\n  * Note: the second-space is not used by all files and even the first-space\n  * for some other. No matter the number of dimensions used,\n  * they are always the first N dim in the sens that they are always the\n  * first N slowest varying dim.\n  * @return {Number} the \n  */\n  getNumberOfDimensionsUsed(){\n    var sizes = this.getDimensionSizes();\n    \n    for(var i=sizes.length-1; i>=0; i--){\n      if( sizes[i] > 1){\n        return i + 1;\n      }\n    }\n    return 0;\n  }\n  \n  \n  /**\n  * Get the transformation applied to the data.\n  *   0 => no transformation\n  *   3 => natural logarithm (log e) \n  */\n  getTranformation(){\n    return this._qeegModObj.metadata.informationList[6].labels;\n  }\n  \n  \n  /**\n  * Get a context by its index\n  * @param {Number} n - index of the context\n  * @return {Object} context object in the form { label: String, value: Number/Array }\n  */\n  getContext( n ){\n    if( n < 0 || n >= this._qeegModObj.metadata.informationList[7].labels.length ){\n      console.warn( \"The context index is out of range\" );\n      return null;\n    }\n    \n    return {\n      label: this._qeegModObj.metadata.informationList[7].labels[ n ],\n      value: this._qeegModObj.metadata.informationList[7].values[ n ],\n    }\n  }\n  \n  \n  /**\n  * get all the context as an array of pairs { label: String, value: Number/Array }\n  * @return {Array} the list of contexts\n  */\n  getAllContexts(){\n    var ctx = this._qeegModObj.metadata.informationList[7];\n    \n    if( ctx.labels.length != ctx.values.length ){\n      console.warn(\"The contexts is corrupted. Inequal amount of values/labels.\");\n      return null;\n    }\n    \n    var allContexts = []\n    \n    for(var i=0; i<ctx.labels.length; i++){\n      allContexts.push({\n        label: ctx.labels[ i ],\n        value: ctx.values[ i ]\n      });\n    }\n    \n    return allContexts;\n  }\n  \n  \n  /**\n  * Get the start Frequency\n  * @return {Number} the start frequency as a float\n  */\n  getStartFrequency(){\n    if( this._typeCode === \"COR\" ) // do not exist for COR\n      return -1;\n      \n    return this._qeegModObj.metadata.informationList[7].values[0];\n  }\n  \n  \n  /**\n  * Get the frequency resolution\n  * @return {Number} the resolution as a float\n  */\n  getFrequencyResolution(){\n    if( this._typeCode === \"COR\" ) // do not exist for COR\n      return -1;\n      \n    return this._qeegModObj.metadata.informationList[7].values[1];\n  }\n  \n  \n  /**\n  * Get the scale factor\n  * @return {Number} the factor as a float\n  */\n  getScaleFactor(){\n    var index = 2\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get an array of boolean informing of the measure has to be scaled with the scale factor\n  * @return {Array} the booleans\n  */\n  getScaleIfScaleMeasures(){\n    var index = 3\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual label for the \"measure\" dimension\n  * @return {String} the label \n  */\n  getMeasureLabel(){\n    var index = 4\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual label for the \"duration\" dimension\n  * @return {String} the label \n  */\n  getDurationLabel(){\n    var index = 5\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual label for the \"first-space\" dimension\n  * @return {String} the label \n  */\n  getFirstSpaceLabel(){\n    var index = 6;\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  * Get the actual label for the \"second-space\" dimension\n  * @return {String} the label \n  */\n  getSecondSpaceLabel(){\n    var index = 7\n    \n    if( this._typeCode === \"COR\" ) // the 2 first elements dont exist for COR\n      index -= 2;\n      \n    return this._qeegModObj.metadata.informationList[7].values[ index ];\n  }\n  \n  \n  /**\n  *\n  */\n  getAllDimensionsLabel(){\n    return [\n      this.getMeasureLabel(),\n      this.getDurationLabel(),\n      this.getFirstSpaceLabel(),\n      this.getSecondSpaceLabel()\n    ]\n  }\n  \n  \n  /**\n  * Get a single value, given some indexes\n  * @param {Number} measureIndex - index among the \"measure\" dimension\n  * @param {Number} durationIndex - index among the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - index among the \"first space\" dimension\n  * @param {Number} secondSpaceIndex - index among the \"second space\" dimension\n  * @return {Number} the value\n  */\n  getValue( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    \n    if( measureIndex < 0 || measureIndex >= sizes.measure ){\n      console.warn( \"measureIndex is out of range.\");\n      return null;\n    }\n    \n    if( durationIndex < 0 || durationIndex >= sizes.duration ){\n      console.warn( \"durationIndex is out of range.\");\n      return null;\n    }\n    \n    if( firstSpaceIndex < 0 || firstSpaceIndex >= sizes.firstSpace ){\n      console.warn( \"firstSpaceIndex is out of range.\");\n      return null;\n    }\n    \n    if( secondSpaceIndex < 0 || secondSpaceIndex >= sizes.secondSpace ){\n      console.warn( \"secondSpaceIndex is out of range.\");\n      return null;\n    }\n    \n    var offset = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex )\n    return this._qeegModObj.data[ offset ];\n  }\n  \n  \n  /**\n  * Get an array of values for such measureIndex, durationIndex and firstSpaceIndex.\n  * These 3 arguments are optional but the unused ones must be on the right.\n  * If using no argument, or only measureIndex, or only measureIndex and durationIndex,\n  * then a larger array corresponding o broarder range of data will be returned\n  * @param {Number} measureIndex - the  index within the \"measure\" dimension\n  * @param {Number} durationIndex - the  index within the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - the  index within the \"first-space\" dimension\n  * @return {Array} the data, or null\n  */\n  getSpectrum( measureIndex = -1, durationIndex = -1, firstSpaceIndex = -1){\n    var sizes = this._qeegModObj.metadata.sizes;\n    var data = this._qeegModObj.data;\n    \n    // get the whole data\n    if( measureIndex == -1 && \n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      return data.slice();\n    }\n    \n    // get spectrum at a given measureIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, 0, 0, 0 );\n      var endIndex = this._getOffset( measureIndex+1, 0, 0, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    // get spectrum at a given measureIndex and a durationIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, 0, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex+1, 0, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    // get spectrum at a given measureIndex, a durationIndex and a firstSpaceIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex >= 0 && firstSpaceIndex < sizes.firstSpace )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex+1, 0 );\n      \n      return data.slice(startIndex, endIndex);\n    }\n    \n    return null;\n  }\n  \n  \n  /**\n  * Instead of using indexes among each dimension, it can be easier to call values by their names.\n  * Does the same as `.getSpectrum()` but uses names instead of indexes.\n  * @param {String} measureLabel - the desired label within the 'measure' dimension (optional)\n  * @param {String} durationLabel - the desired label within the 'duration' dimension (optional)\n  * @param {String} firstSpaceLabel - the desired label within the 'first-space' dimension (optional)\n  * @return {Array} matched data, or null if using a non-existing label\n  */\n  getSpectrumByLabels( measureLabel = null, durationLabel = null, firstSpaceLabel = null ){\n    var info = this._qeegModObj.metadata.informationList;\n    var measureIndex = info[0].labels.indexOf( measureLabel )\n    var durationIndex = info[1].labels.indexOf( durationLabel )\n    var firstSpaceIndex = info[2].labels.indexOf( firstSpaceLabel )\n    \n    if( measureLabel && measureIndex == -1 ){\n      console.warn(\"The measure label \" + measureLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( durationLabel && durationIndex == -1 ){\n      console.warn(\"The duration label \" + durationLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( firstSpaceLabel && firstSpaceIndex == -1 ){\n      console.warn(\"The first-space label \" + firstSpaceLabel + \" could not be found.\");\n      return null\n    }\n    \n    return this.getSpectrum( measureIndex, durationIndex, firstSpaceIndex );\n  }\n  \n  \n  /**\n  * Get all the labels as a hierarchical cascade. For examples, if you feel\n  * the 3 arguments for a dataset that have a second-space dimension of size\n  * greater than 1, it will return an array [ \"the measure label\",\n  * \"the duration label\", \"the first space label\", [\"1st label of 2nd sp\"\n  * \"2nd label of 2nd sp\", \"3rd label of 2nd sp\"]]. Only the last argument\n  * (the array) is not already given in argument but this sort of repeat is so\n  * that the returned values has all the cascade.\n  * @param {String} measureLabel - the desired label within the 'measure' dimension (optional)\n  * @param {String} durationLabel - the desired label within the 'duration' dimension (optional)\n  * @param {String} firstSpaceLabel - the desired label within the 'first-space' dimension (optional)\n  * @return {Array} contains the hierarchical cascade of labels, the last element being an array\n  */\n  getSpectrumLabelsByLabels( measureLabel = null, durationLabel = null, firstSpaceLabel = null ){\n    var info = this._qeegModObj.metadata.informationList;\n    var measureIndex = info[0].labels.indexOf( measureLabel )\n    var durationIndex = info[1].labels.indexOf( durationLabel )\n    var firstSpaceIndex = info[2].labels.indexOf( firstSpaceLabel )\n    \n    if( measureLabel && measureIndex == -1 ){\n      console.warn(\"The measure label \" + measureLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( durationLabel && durationIndex == -1 ){\n      console.warn(\"The duration label \" + durationLabel + \" could not be found.\");\n      return null\n    }\n    \n    if( firstSpaceLabel && firstSpaceIndex == -1 ){\n      console.warn(\"The first-space label \" + firstSpaceLabel + \" could not be found.\");\n      return null\n    }\n    \n    return this.getSpectrumLabels( measureIndex, durationIndex, firstSpaceIndex );\n  }\n  \n  \n  /**\n  * Does like getSpectrumLabelsByLabels but uses the indexes among each dimension\n  * rather than their labels.\n  * @param {Number} measureIndex - the  index within the \"measure\" dimension\n  * @param {Number} durationIndex - the  index within the \"duration\" dimension\n  * @param {Number} firstSpaceIndex - the  index within the \"first-space\" dimension\n  * @return {Array} contains the hierarchical cascade of labels, the last element being an array\n  */\n  getSpectrumLabels( measureIndex = -1, durationIndex = -1, firstSpaceIndex = -1 ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    var info = this._qeegModObj.metadata.informationList;\n    var arrayOfLabels = []\n    \n    // get the whole data labels\n    if( measureIndex == -1 && \n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      if( info[0].labels )\n        arrayOfLabels.push( info[0].labels.slice() )\n        \n      if( info[1].labels )\n        arrayOfLabels.push( info[1].labels.slice() )\n        \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n        \n      return arrayOfLabels;\n    }\n    \n    // get spectrum labels starting from a given measureIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex == -1 &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, 0, 0, 0 );\n      var endIndex = this._getOffset( measureIndex+1, 0, 0, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n      \n      if( info[1].labels )\n        arrayOfLabels.push( info[1].labels.slice() )\n        \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n      \n      return arrayOfLabels;\n    }\n    \n    // get spectrum at a given measureIndex and a durationIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex == -1 )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, 0, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex+1, 0, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n        \n      if( info[1].labels &&  info[1].labels.length > durationIndex )\n        arrayOfLabels.push( info[1].labels[ durationIndex ] )\n      \n      if( info[2].labels )  \n        arrayOfLabels.push( info[2].labels.slice() )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n      \n      return arrayOfLabels;\n    }\n    \n    // get spectrum at a given measureIndex, a durationIndex and a firstSpaceIndex\n    if( measureIndex >=0 && measureIndex < sizes.measure &&\n        durationIndex >=0 && durationIndex < sizes.duration &&\n        firstSpaceIndex >= 0 && firstSpaceIndex < sizes.firstSpace )\n    {\n      var startIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex, 0 );\n      var endIndex = this._getOffset( measureIndex, durationIndex, firstSpaceIndex+1, 0 );\n      \n      if( info[0].labels &&  info[0].labels.length > measureIndex )\n        arrayOfLabels.push( info[0].labels[ measureIndex ] )\n        \n      if( info[1].labels &&  info[1].labels.length > durationIndex )\n        arrayOfLabels.push( info[1].labels[ durationIndex ] )\n      \n      if( info[2].labels &&  info[2].labels.length > firstSpaceIndex )\n        arrayOfLabels.push( info[2].labels[ firstSpaceIndex ] )\n        \n      if( info[3].labels )\n        arrayOfLabels.push( info[3].labels.slice() )\n        \n      return arrayOfLabels;\n    }\n    \n    return null;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * Get the offset of the querried data withing the 1D array\n  */\n  _getOffset( measureIndex, durationIndex, firstSpaceIndex, secondSpaceIndex ){\n    var sizes = this._qeegModObj.metadata.sizes;\n    return ( measureIndex * sizes.duration * sizes.firstSpace + durationIndex * sizes.firstSpace + firstSpaceIndex ) * sizes.secondSpace + secondSpaceIndex;\n  }\n  \n  \n  \n  \n} /* END of class QeegModFileInterpreter */\n\nexport { QeegModFileInterpreter }\n"],"names":[],"mappings":"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"}