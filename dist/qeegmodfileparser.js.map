{"version":3,"file":null,"sources":["../src/QeegModFileParser.js"],"sourcesContent":["/*\n* Author    Jonathan Lurie - http://me.jonahanlurie.fr\n* License   MIT\n* Link      https://github.com/jonathanlurie/es6module\n* Lab       MCIN - http://mcin.ca/ - Montreal Neurological Institute\n*/\n\n\n/**\n* An instance of QeegModFileParser can be used to parse several file\n* (you don't need to create a QeegModFileParser instance per file to parse).\n* The Qeeg MOD file usually have the .MOD extension, though this parser does not\n* need the filename or the extension.\n*\n*/\nclass QeegModFileParser {\n  constructor(){\n    this._rawData = null;\n  }\n  \n  /**\n  * Feed the parser with raw data to be parsed\n  * @param {ArrayBuffer} data - the raw data\n  */\n  setRawData( data ){\n    this._rawData = data;\n  }\n  \n  \n  /**\n  * Launch the parsing of the ArrayBuffer that was given with the method setRawData\n  * @return {Object} - the MOD file data in a readable format\n  */\n  parse(){\n    var qeegData = null;\n    try{\n      qeegData = this._parseNoException();\n    }catch(e){\n      //console.error( e );\n      console.warn(\"This file is not compatible.\");\n    }\n    \n    return qeegData;\n  }\n  \n  \n  /**\n  * [PRIVATE]\n  * This method parses the data without caring of potential exception to be raised,\n  * it does not handle them. Thus, this method is unsafe to use as is and should\n  * no be used directly.\n  * @return {Object} - the MOD file data in a readable format\n  */\n  _parseNoException(){\n    if( !this._rawData ){\n      console.warn(\"The input buffer is null. Nothing to be parsed here.\");\n      return null;\n    }\n    \n    var inputBuffer = this._rawData\n    \n    var view = new DataView( inputBuffer );\n    var littleEndian = true;\n    \n    // ------------- DECODING HEADER -------------------\n    \n    var header = {};\n    \n    // Protection Mask\n    // Offset: 0, length: 2\n    header.protectionMask = view.getUint16(0, littleEndian);\n    \n    // Comment (first byte is the real length)\n    // Offset: 2, length: 81\n    var commentRealLength = view.getUint8(2);\n    var commentBytes = new Uint8Array(inputBuffer, 3, commentRealLength);\n    header.comment = String.fromCharCode.apply(String, commentBytes);\n    \n    // Measure (M) Size\n    // Offset: 83, length: 2\n    header.measureSize = view.getUint16(83, littleEndian);\n    \n    // Duration (D) Size\n    // Offset: 85, length: 2\n    header.durationSize = view.getUint16(85, littleEndian);\n    \n    // First space (F) Size\n    // Offset: 87, length: 2\n    header.firstSpaceSize = view.getUint16(87, littleEndian);\n    \n    // Second space (S) Size\n    // Offset: 89, length: 2\n    header.secondSpaceSize = view.getUint16(89, littleEndian);\n    \n    // Reserved bytes\n    // Offset: 91, length: 2\n    header.reservedBytes = view.getUint16(91, littleEndian);\n    \n    // Data size\n    // Offset: 93, length: 2\n    header.dataSize = view.getUint16(93, littleEndian);\n    \n    // ------------- DECODING MATRIX -------------------\n    var matrixOffset = 95;\n    \n    var matrixSizeElements =  header.measureSize * \n                              header.durationSize * \n                              header.firstSpaceSize * \n                              header.secondSpaceSize;\n                              \n    var matrixSizeBytes = matrixSizeElements * header.dataSize;\n                          \n    var matrixData = new Float32Array(matrixSizeElements);\n    \n    for(var i=0; i<matrixSizeElements; i++){\n      matrixData[i] = view.getFloat32(matrixOffset + i * header.dataSize, littleEndian) \n    }\n    \n    // ------------- DECODING RESERVED BYTE SECTION -------------------\n    var reservedBytesSectionOffset = matrixOffset + matrixSizeBytes ;\n    // we dont care about this section - we wont use it\n    \n    // ------------- DECODING INFO SECTION -------------------\n    // This info section is lways corrupted - we wont use it\n    var infoSectionOffset = reservedBytesSectionOffset + header.reservedBytes;\n    var infoRealLength = view.getUint8(infoSectionOffset);\n    var infoBytes = new Uint8Array(inputBuffer, infoSectionOffset+1, infoRealLength);\n    var info = String.fromCharCode.apply(String, infoBytes);\n    \n    // ------------- DECODING HEADER OF LIST SECTION -------------------\n    var headerOfListOffset = infoSectionOffset + 9;\n    \n    var listSize = 8;\n    var offsetByteSize = 4;\n    var totalByteSize = 2;\n    var headerOfList = new Array(listSize);\n    \n    for(var i=0; i<listSize; i++){\n      var record = {\n        // !! IMPORTANT !! there is a known BUG in the offset value\n        //offset: view.getInt16(headerOfListOffset + i * (offsetByteSize+totalByteSize), littleEndian),\n        total: view.getUint16(headerOfListOffset + i * (offsetByteSize+totalByteSize) + offsetByteSize, littleEndian),\n        labels: null\n      }\n      headerOfList[i] = record;\n    }\n    \n    headerOfList[0].description = \"list of labels for measure dimension\";\n    headerOfList[1].description = \"list of labels for duration dimension\";\n    headerOfList[2].description = \"list of labels for first space dimension\";\n    headerOfList[3].description = \"list of labels for second space dimension\";\n    headerOfList[4].description = \"list of scales\";\n    headerOfList[5].description = \"list of units\";\n    headerOfList[6].description = \"list of transformations\";\n    headerOfList[7].description = \"list of contexts\";\n    \n    var infoSection2Offset = headerOfListOffset + 48;\n    var localOffset = infoSection2Offset\n\n    // list 1 to 6 (0 to 5 on out 0-indexed array)\n    for(var i=0; i<headerOfList.length - 2; i++){\n      var nbOfElem = headerOfList[i].total;\n      \n      headerOfList[i].labels = nbOfElem ? new Array( nbOfElem ).fill(\"\") : 0;\n      \n      for(var j=0; j<nbOfElem; j++){\n        var strByteLength = view.getUint8(localOffset)\n        \n        if( strByteLength ){\n          var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n          //var str = String.fromCharCode.apply(String, strBytes);\n          var str = String.fromCharCode(...strBytes);\n          // some ASCII charcode are wrong, hopefully always in the same way\n          headerOfList[i].labels[j] = str.replace(\"æ\", \"µ\").replace(\"ý\", \"²\"); \n        }\n        \n        localOffset += strByteLength + 1;\n      }\n      \n    }\n\n    // particular case for list 7 (6 on our 0-indexed array) -- the transformations\n    // the total value is not the length but the actual value to consider\n    var transformation = view.getUint8(localOffset);\n    headerOfList[6].labels = transformation;\n    localOffset += headerOfList[6].total*(transformation + 1);\n    \n    // ------------- DECODING THE LIST OF CONTEXT -------------------\n    \n    // parsing the list of contexts\n    var listOfContexts = headerOfList[ headerOfList.length - 1];\n    listOfContexts.contextsByteLength = new Array( listOfContexts.total );\n    listOfContexts.types = new Array( listOfContexts.total );\n    listOfContexts.values = new Array( listOfContexts.total );\n    \n    const regexTypeDetection = /[a-zA-Z ]*\\:{1}([a-zA-Z]*)[\\[]?\\d*[\\]]?/;\n    \n    listOfContexts.labels = new Array( listOfContexts.total ).fill(\"\");\n    \n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var strByteLength = view.getUint8(localOffset)\n      var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n      var str = String.fromCharCode.apply(String, strBytes);\n      listOfContexts.labels[iCtx] = str.split(\":\")[0];\n      listOfContexts.contextsByteLength[iCtx] = view.getUint16(localOffset + strByteLength + 1, littleEndian);\n      \n      var typeMatch = regexTypeDetection.exec( str );\n      if(typeMatch){\n        listOfContexts.types[iCtx] = typeMatch[1].toLowerCase();\n      }else{\n        listOfContexts.types[iCtx] = null;\n      }\n      \n      localOffset += strByteLength + 3;\n    }\n    \n    // getting the values for the contexts\n    for(var iCtx=0; iCtx<listOfContexts.total; iCtx++){\n      var value = null;\n      if( listOfContexts.types[iCtx] === \"single\" ){\n        // single precision floats are on 4 bytes\n        value = view.getFloat32(localOffset, littleEndian);\n        \n      }else if(listOfContexts.types[iCtx] === \"boolean\"){\n        value = new Array(listOfContexts.contextsByteLength[iCtx]);\n        for(var b=0; b<value.length; b++){\n          value[b] = !!view.getUint8(localOffset + b)\n        }\n        \n      }else if(listOfContexts.types[iCtx] === \"string\"){\n        var strByteLength = view.getUint8(localOffset)\n        var strBytes = new Uint8Array(inputBuffer, localOffset+1, strByteLength );\n        value = String.fromCharCode.apply(String, strBytes);\n      }\n      \n      localOffset += listOfContexts.contextsByteLength[iCtx];\n      listOfContexts.values[ iCtx ] = value;\n    }\n    \n    // ------------- CLEANING HEADER OF LIST -------------------\n    \n    for(var i=0; i<headerOfList.length; i++){\n      delete headerOfList[i].total;\n    }\n    \n    delete headerOfList[7].contextsByteLength;\n    delete headerOfList[7].types;\n    \n    var modEeg = {\n      metadata: {\n        comment: header.comment,\n        sizes: {\n          measure: header.measureSize,\n          duration: header.durationSize,\n          firstSpace: header.firstSpaceSize,\n          secondSpace: header.secondSpaceSize,\n        },\n        informationList: headerOfList\n      },\n      \n      data: matrixData\n    }\n    \n    return modEeg;\n  }\n  \n  \n} /* END of QeegModFileParser */\n\nexport { QeegModFileParser }; \n"],"names":[],"mappings":"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"}